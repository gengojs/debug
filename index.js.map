{"version":3,"sources":["lib/index.js"],"names":[],"mappings":";;;;;;;;qBAyCS,QAAQ;;;;;;qBAzCC,OAAO;;;;gCACM,oBAAoB;;;;;;IAI7C,KAAK;AACE,UADP,KAAK,CACG,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE;;;wBADhC,KAAK;;AAET,kCAAK,CAAC;AACN,MAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,MAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,MAAI,CAAC,KAAK,GAAG,CAAC,YAAI;AACjB,OAAI,GAAG,GAAG,EAAE,CAAC;AACb,OAAI,KAAK,GAAG,OAAO,CAAC;AACpB,OAAI,UAAU,GAAG,CAAC,MAAM,EAAC,QAAQ,EAAE,QAAQ,EAC1C,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;AACzC,OAAI,MAAM,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AACpE,aAAU,CAAC,OAAO,CAAC,UAAS,SAAS,EAAE;AACtC,UAAM,CAAC,OAAO,CAAC,UAAS,KAAK,EAAE;AAC9B,SAAI,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,KAAK,CAAC;AAChD,QAAG,CAAC,GAAG,CAAC,GAAG,wBAAM,KAAK,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;KACxD,EAAE,IAAI,CAAC,CAAC;IACT,QAAO,CAAC;AACT,UAAO,GAAG,CAAC;GACX,CAAA,EAAG,CAAC;EACL;;;;;;;;;;;cApBI,KAAK;;SAqBL,eAAG;AACN,OAAI,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,GAAG,GAAG,GAC9D,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;GAChD;;;QAxBG,KAAK;;;AAoCX,SAAS,QAAQ,CAAE,SAAS,EAAE,KAAK,EAAW;mCAAN,IAAI;AAAJ,MAAI;;;AAC3C,AAAC,KAAI,KAAK,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CAAE,GAAG,EAAE,CAAC;CAC1C","file":"index.js","sourcesContent":["import debug from 'debug';\nimport { install as map } from 'source-map-support';\n/**\n * Debug is a debug wrapper for gengo.js\n */\nclass Debug {\n\tconstructor (namespace, level, args) {\n\t\tmap();\n\t\tthis.namespace = namespace;\n\t\tthis.level = level;\n\t\tthis.args = args;\n\t\tthis.debug = (()=>{\n\t\t\tvar obj = {};\n\t\t\tvar gengo = 'gengo';\n\t\t\tvar namespaces = ['core','parser', 'router', \n\t\t\t\t'backend', 'api', 'localize', 'header'];\n\t\t\tvar levels = ['debug', 'warn', 'error', 'info', 'verbose', 'silly'];\n\t\t\tnamespaces.forEach(function(namespace) {\n\t\t\t\tlevels.forEach(function(level) {\n\t\t\t\t\tvar key = gengo + '.' + namespace + ':' + level;\n\t\t\t\t\tobj[key] = debug(gengo + '.' + namespace + ':' + level);\n\t\t\t\t}, this);\n\t\t\t}, this);\n\t\t\treturn obj;\n\t\t})();\n\t}\n  log () {\t\n\t  this.debug['gengo' + '.' + this.namespace.toLowerCase() + ':' + \n\t\tthis.level.toLowerCase()].apply(null, this.args);\n  }\n}\n\n/**\n * Wraps 'debug' and outputs the arguments using namespaces.\n * @param {string} namespace - The namespace of the gengo to debug.\n * @param {string} level - The level of debug to output.\n * @param {*} args - The arguments to output.\n * @example \n *  debugify('core.plugins', 'warn', 'Hello world')\n */\nexport default \nfunction debufigy (namespace, level, ...args) {\n\t(new Debug(namespace, level, args)).log();\n}"]}