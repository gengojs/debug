{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;qBAEK,OAAO;;;;qBACP,OAAO;;;;QAClB,6BAA6B;;;;;;IAI9B,KAAK,GACE,SADP,KAAK,CACG,SAAS,EAAE;;;wBADnB,KAAK;;AAEP,MAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,MAAI,MAAM,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AACpE,MAAI,CAAC,OAAO,GAAG,CAAC,YAAM;AACpB,QAAI,GAAG,GAAG,EAAE,CAAC;AACb,QAAI,KAAK,GAAG,OAAO,CAAC;AACpB,QAAI,UAAU,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAC1C,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,CACvC,CAAC;AACF,cAAU,CAAC,OAAO,CAAC,UAAS,SAAS,EAAE;AACrC,YAAM,CAAC,OAAO,CAAC,UAAS,KAAK,EAAE;AAC7B,YAAI,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,KAAK,CAAC;AAChD,WAAG,CAAC,GAAG,CAAC,GAAG,wBAAM,KAAK,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;OACzD,EAAE,IAAI,CAAC,CAAC;KACV,QAAO,CAAC;AACT,WAAO,GAAG,CAAC;GACZ,CAAA,EAAG,CAAC;AACL,QAAM,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;AACtB,UAAK,KAAK,CAAC,GAAG,YAAa;wCAAT,IAAI;AAAJ,YAAI;;;AACpB,UAAI,SAAS,GAAG,OAAO,GAAG,GAAG,GAAG,MAAK,SAAS,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC;AAC3E,UAAI,KAAK,KAAK,OAAO,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC,EAAI;AAC1C,eAAO,mBAAM,GAAG,CAAC,CAAC,CAAC,CAAC;OACrB,CAAC,CAAC;AACH,UAAI,KAAK,KAAK,MAAM,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC,EAAI;AACzC,eAAO,mBAAM,MAAM,CAAC,CAAC,CAAC,CAAC;OACxB,CAAC,CAAC;AACH,UAAI,KAAK,KAAK,MAAM,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC,EAAI;AACzC,eAAO,mBAAM,KAAK,CAAC,CAAC,CAAC,CAAC;OACvB,CAAC,CAAC;AACH,YAAK,OAAO,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC3C,CAAC;GACH,CAAC,CAAC;CACJ;;;;;;;;;;qBASY,UAAC,SAAS,EAAK;AAC5B,SAAO,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;CAC7B","file":"index.js","sourcesContent":["'use strict';\n\nimport debug from 'debug';\nimport chalk from 'chalk';\nimport 'source-map-support/register';\n/**\n * Debug is a debug wrapper for gengo.js\n */\nclass Debug {\n  constructor(namespace) {\n    this.namespace = namespace;\n    var levels = ['debug', 'warn', 'error', 'info', 'verbose', 'silly'];\n    this.console = (() => {\n      var obj = {};\n      var gengo = 'gengo';\n      var namespaces = ['core', 'parser', 'router',\n        'backend', 'api', 'localize', 'header'\n      ];\n      namespaces.forEach(function(namespace) {\n        levels.forEach(function(level) {\n          var key = gengo + '.' + namespace + ':' + level;\n          obj[key] = debug(gengo + '.' + namespace + ':' + level);\n        }, this);\n      }, this);\n      return obj;\n    })();\n    levels.forEach(level => {\n      this[level] = (...args) => {\n        var namespace = 'gengo' + '.' + this.namespace.toLowerCase() + ':' + level;\n        if (level === 'error') args = args.map(a => {\n          return chalk.red(a);\n        });\n        if (level === 'warn') args = args.map(a => {\n          return chalk.yellow(a);\n        });\n        if (level === 'info') args = args.map(a => {\n          return chalk.green(a);\n        });\n        this.console[namespace].apply(null, args);\n      };\n    });\n  }\n}\n\n/**\n * Wraps 'debug' and outputs the arguments using namespaces.\n * @param {string} namespace - The namespace of the gengo to debug.\n * @example \n *  debugify('core.plugins').warn('hello')\n */\nexport default (namespace) => {\n  return new Debug(namespace);\n};"],"sourceRoot":"/source/"}